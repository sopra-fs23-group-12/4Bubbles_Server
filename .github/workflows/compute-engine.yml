name: Build and Deploy to Google Compute Engine

on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available

      - name: Build JAR file
        run: ./gradlew build
        
      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCE_SECRET }}

      - name: Shutdown old process 
        run: |
          gcloud compute ssh instance-1 \
            --project "sopra-fs23-group-12-server-v2" \
            --zone "us-central1-a" \
            --command "pkill -f soprafs23.jar &"

      - name: Copy JAR file to Google Compute Engine
        run: |
          gcloud compute scp build/libs/soprafs23.jar instance-1:~/ \
            --project "sopra-fs23-group-12-server-v2" \
            --zone "us-central1-a"

      - name: Delay before restarting
        run: |
          sleep 30s
      
      - name: Restart new Process
        run: | 
          # SSH into the server and execute commands
          gcloud compute ssh instance-1 \
            --project "sopra-fs23-group-12-server-v2" \
            --zone "us-central1-a" \
            --command "PRODUCTION=true nohup java -jar soprafs23.jar > output.log 2>&1 &"
            
      - name: Delay
        run: |
          sleep 30s
          
      - name: Check if process is running
        id: process-check
        run: |
          output=$(gcloud compute ssh instance-1 \
            --project "sopra-fs23-group-12-server-v2" \
            --zone "us-central1-a" \
            --command "pgrep -f soprafs23.jar")
          echo "::set-output name=pid::$output"
          
      - name: Process status
        run: |
          if [[ -n "${{ steps.process-check.outputs.pid }}" ]]; then
            echo "Process is running"
          else
            echo "Process is not running"
            exit 1
          fi
